{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\projects\\\\My Projects\\\\redux_form\\\\fss\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\projects\\\\My Projects\\\\redux_form\\\\fss\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\My Projects\\\\redux_form\\\\fss\\\\src\\\\index.js\";\n\n/**\n * THIS IS THE ENTRY POINT FOR THE CLIENT, JUST LIKE server.js IS THE ENTRY POINT FOR THE SERVER.\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyRouterMiddleware, Router, browserHistory, match } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport { syncHistoryWithStore, replace } from 'react-router-redux';\nimport { ReduxAsyncConnect } from 'redux-connect';\nimport { useScroll } from 'react-router-scroll';\nimport { createApp } from 'app';\nimport { Provider } from './components';\nimport HotEnabler from './components/HotEnabler';\nimport createStore from './redux/create';\nimport apiClient from './helpers/apiClient';\nimport getRoutes from './routes';\nvar client = apiClient();\nvar app = createApp('rest');\nvar dest = document.getElementById('root');\n\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var store, history, redirect, renderRouter, render;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store = createStore(browserHistory, {\n            client: client,\n            app: app\n          }, window.__data);\n          history = syncHistoryWithStore(browserHistory, store);\n          redirect = bindActionCreators(replace, store.dispatch);\n\n          renderRouter = function renderRouter(props) {\n            return React.createElement(ReduxAsyncConnect, Object.assign({}, props, {\n              helpers: {\n                client: client,\n                app: app,\n                redirect: redirect\n              },\n              filter: function filter(item) {\n                return !item.deferred;\n              },\n              render: applyRouterMiddleware(useScroll()),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29\n              },\n              __self: this\n            }));\n          };\n\n          render = function render(routes) {\n            match({\n              history: history,\n              routes: routes\n            }, function (error, redirectLocation, renderProps) {\n              ReactDOM.hydrate(React.createElement(HotEnabler, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 40\n                },\n                __self: this\n              }, React.createElement(Provider, {\n                store: store,\n                app: app,\n                key: \"provider\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 41\n                },\n                __self: this\n              }, React.createElement(Router, Object.assign({}, renderProps, {\n                render: renderRouter,\n                history: history,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 42\n                },\n                __self: this\n              }), routes))), dest);\n            });\n          };\n\n          render(getRoutes(store));\n\n          if (module.hot) {\n            module.hot.accept('./index');\n            module.hot.accept('./routes', function () {\n              var nextGetRoutes = require('./routes').default;\n\n              render(nextGetRoutes(store));\n            });\n          } // if (!__DEVELOPMENT__ && 'serviceWorker' in navigator) {\n          // \twindow.addEventListener('load', async () => {\n          // \t\ttry {\n          // \t\t\tawait navigator.serviceWorker.register('/dist/service-worker.js', { scope: '/' });\n          // \t\t\tconsole.log('Service worker registered!');\n          // \t\t} catch (error) {\n          // \t\t\tconsole.log('Error registering service worker: ', error);\n          // \t\t}\n          // \t\tawait navigator.serviceWorker.ready;\n          // \t\tconsole.log('Service Worker Ready');\n          // \t});\n          // }\n\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, this);\n}))();","map":{"version":3,"sources":["C:\\projects\\My Projects\\redux_form\\fss\\src\\index.js"],"names":["React","ReactDOM","applyRouterMiddleware","Router","browserHistory","match","bindActionCreators","syncHistoryWithStore","replace","ReduxAsyncConnect","useScroll","createApp","Provider","HotEnabler","createStore","apiClient","getRoutes","client","app","dest","document","getElementById","store","window","__data","history","redirect","dispatch","renderRouter","props","item","deferred","render","routes","error","redirectLocation","renderProps","hydrate","module","hot","accept","nextGetRoutes","require","default"],"mappings":"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","sourcesContent":["/**\n * THIS IS THE ENTRY POINT FOR THE CLIENT, JUST LIKE server.js IS THE ENTRY POINT FOR THE SERVER.\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyRouterMiddleware, Router, browserHistory, match } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport { syncHistoryWithStore, replace } from 'react-router-redux';\nimport { ReduxAsyncConnect } from 'redux-connect';\nimport { useScroll } from 'react-router-scroll';\nimport { createApp } from 'app';\nimport { Provider } from './components';\nimport HotEnabler from './components/HotEnabler';\nimport createStore from './redux/create';\nimport apiClient from './helpers/apiClient';\nimport getRoutes from './routes';\n\nconst client = apiClient();\nconst app = createApp('rest');\nconst dest = document.getElementById('root');\n\n(async () => {\n\tconst store = createStore(browserHistory, { client, app }, window.__data);\n\tconst history = syncHistoryWithStore(browserHistory, store);\n\n\tconst redirect = bindActionCreators(replace, store.dispatch);\n\n\tconst renderRouter = props => (\n\t\t<ReduxAsyncConnect\n\t\t\t{...props}\n\t\t\thelpers={{ client, app, redirect }}\n\t\t\tfilter={item => !item.deferred}\n\t\t\trender={applyRouterMiddleware(useScroll())}\n\t\t/>\n\t);\n\n\tconst render = routes => {\n\t\tmatch({ history, routes }, (error, redirectLocation, renderProps) => {\n\t\t\tReactDOM.hydrate(\n\t\t\t\t<HotEnabler>\n\t\t\t\t\t<Provider store={store} app={app} key=\"provider\">\n\t\t\t\t\t\t<Router {...renderProps} render={renderRouter} history={history}>\n\t\t\t\t\t\t\t{routes}\n\t\t\t\t\t\t</Router>\n\t\t\t\t\t</Provider>\n\t\t\t\t</HotEnabler>,\n\t\t\t\tdest,\n\t\t\t);\n\t\t});\n\t};\n\n\trender(getRoutes(store));\n\n\tif (module.hot) {\n\t\tmodule.hot.accept('./index');\n\t\tmodule.hot.accept('./routes', () => {\n\t\t\tconst nextGetRoutes = require('./routes').default;\n\t\t\trender(nextGetRoutes(store));\n\t\t});\n\t}\n\n\t// if (!__DEVELOPMENT__ && 'serviceWorker' in navigator) {\n\t// \twindow.addEventListener('load', async () => {\n\t// \t\ttry {\n\t// \t\t\tawait navigator.serviceWorker.register('/dist/service-worker.js', { scope: '/' });\n\t// \t\t\tconsole.log('Service worker registered!');\n\t// \t\t} catch (error) {\n\t// \t\t\tconsole.log('Error registering service worker: ', error);\n\t// \t\t}\n\n\t// \t\tawait navigator.serviceWorker.ready;\n\t// \t\tconsole.log('Service Worker Ready');\n\t// \t});\n\t// }\n})();\n"]},"metadata":{},"sourceType":"module"}